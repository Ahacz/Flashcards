// <auto-generated />
using System;
using Flashcards;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Flashcards.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.6");

            modelBuilder.Entity("Flashcards.Models.FlashCard", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("QueuePriority")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SnapshotPath")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Flashcards");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a09a8cce-4978-4a88-b03d-a389e1935705"),
                            Description = "Make an algorithm that accepts an integer and returns the nth number of fibonacci series",
                            QueuePriority = 0,
                            SnapshotPath = "f0a5f63d-6a35-4b05-abfa-84f6905c79b0",
                            Title = "Fibonacci"
                        },
                        new
                        {
                            Id = new Guid("40bf5e5b-b1c5-4566-bdb1-1b9263c54822"),
                            Description = "Make an algorithm that finds a value in an (un)sorted array in fewest steps possible",
                            QueuePriority = 0,
                            SnapshotPath = "f0a5f63d-6a35-4b05-abfa-84f6905c79b0",
                            Title = "Binary search"
                        },
                        new
                        {
                            Id = new Guid("a85b12d2-61eb-4def-b319-d55a70653df2"),
                            Description = "Implement a simple mail sending piece of code",
                            QueuePriority = 0,
                            SnapshotPath = "f0a5f63d-6a35-4b05-abfa-84f6905c79b0",
                            Title = "Mail sender"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
