// <auto-generated />
using System;
using Flashcards;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Flashcards.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240706195212_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.6");

            modelBuilder.Entity("Flashcards.Models.FlashCard", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("QueuePriority")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SnapshotPath")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Flashcards");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b3ffefb3-cb1b-40d1-a1bb-375ed53597d6"),
                            Description = "Make an algorithm that accepts an integer and returns the nth number of fibonacci series",
                            QueuePriority = 0,
                            SnapshotPath = "19dfb113-4b44-4d85-885a-2d552ed30ad0",
                            Title = "Fibonacci"
                        },
                        new
                        {
                            Id = new Guid("b7c44ab7-b9db-4048-bd9f-c9c8244815fc"),
                            Description = "Make an algorithm that finds a value in an (un)sorted array in fewest steps possible",
                            QueuePriority = 0,
                            SnapshotPath = "19dfb113-4b44-4d85-885a-2d552ed30ad0",
                            Title = "Binary search"
                        },
                        new
                        {
                            Id = new Guid("fb20407f-e351-45b1-8eb4-34e666598147"),
                            Description = "Implement a simple mail sending piece of code",
                            QueuePriority = 0,
                            SnapshotPath = "19dfb113-4b44-4d85-885a-2d552ed30ad0",
                            Title = "Mail sender"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
